import PropTypes            from 'prop-types'
import React                from 'react'

import { Helmet }           from 'react-helmet'

import { Button }           from 'semantic-ui-react'
import { Container }        from 'semantic-ui-react'
import { Header }           from 'semantic-ui-react'
import { Image }            from 'semantic-ui-react'
import { Grid }             from 'semantic-ui-react'
import { List }             from 'semantic-ui-react'
import { Segment }          from 'semantic-ui-react'


import go                   from 'app/stories/history/go'

import s                    from './Root.css'

// import createDebugger       from 'engine/debug'
// const debug = createDebugger(`Root`)

const Root = ({ title }, { translate }) => {
  return (
    <div className={ s.root }>
      <Helmet>
        <title>{ title }</title>
      </Helmet>

      <Segment
        className={ s.sectionFirst }
        inverted
        size='large'
        textAlign='center'
        vertical
      >
        <Container text>
          <Header inverted className={ s.header }>
            { translate(`Root.header`) }
          </Header>
          <Button
            content={ translate(`Root.createStory`) }
            icon='right arrow'
            labelPosition='right'
            primary
            size='huge'

            onClick={ () => go(`/create`) }
          />
        </Container>
      </Segment>


      <Segment
        className={ s.sectionContent }
        vertical
      >
        <Grid
          container
          stackable
        >
          <Grid.Row>
            <Grid.Column widescreen={ 8 }>
              <Header>{ translate(`Root.goal`) }</Header>
              <List bulleted>
                <List.Item>{ translate(`Root.popularize`) }</List.Item>
                <List.Item>{ translate(`Root.createFirst`) }</List.Item>
                <List.Item>{ translate(`Root.jswannabe`) }</List.Item>
              </List>
              <Header>{ translate(`Root.plan`) }</Header>
              <p>{ translate(`Root.planDescription`) }</p>
              <List bulleted>
                <List.Item>{ translate(`Root.autogenerated`) }</List.Item>
                <List.Item>{ translate(`Root.database`) }</List.Item>
                <List.Item>{ translate(`Root.ui`) }</List.Item>
              </List>
            </Grid.Column>
            <Grid.Column floated='right' widescreen={ 6 }>
              <Image shape='circular' src='wall-e.png' width='340'/>
            </Grid.Column>
          </Grid.Row>

        </Grid>
      </Segment>
    </div>
  )
}

Root.contextTypes = {
  translate: PropTypes.func.isRequired,
}

import withStyles           from 'isomorphic-style-loader/lib/withStyles'

export default withStyles(s)(Root)
