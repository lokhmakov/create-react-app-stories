import { find }             from 'lodash'
import { graphql }          from 'react-apollo'

import generateQueryCreate  from 'engine/graphql/generate/query/create'

export default ({ config, debug, methods }) => {
  const updateQueries = {
    [methods.findAll]: (prev, { mutationResult }) => {
      debug(`graphql.create.updateQueries()`)

      const { data = {} } = mutationResult
      const { [methods.create]: createResult } = data
      const { result: [doc], errors } = createResult

      if (find(prev[methods.findAll].result.slice(-10), { id: doc.id })) {
        return prev
      }

      return {
        [methods.findAll]: [
          ...prev[methods.findAll],
          doc,
        ]
      }
    },
  }

  return (payload) => {
    return graphql(generateQueryCreate(config), {
      props: ({mutate}) => ({
        [methods.create]: (variables) => mutate({
          variables,
          updateQueries,
        }),
      }),
    })
  }
}
