import { some }             from 'lodash'

import debug                from '../debug'

export default ({ customResolverMap, model, name, pubsub }) => async (parent, payload, ctx) => {
  debug(`${ name }Update()`, payload)

  // const { update } = customResolverMap
  // if (update) return update(parent, payload, ctx)

  const { where = {}, defaults = {}} = payload

  if (!Object.keys(where).length) return []

  const searchInstance = await model.findOne({ where })
  if (searchInstance) {
    if (!some([searchInstance.get({ plain: true })], defaults)) {
      await model.update(defaults, { where: { id: searchInstance.id }})
      const result = await model.findOne({ where })
      // debug(`${ name }Update()`, `pubsub`, [result])
      pubsub.publish(`${ name }Updated`, [result])
      return { result: [result], errors: [] }
    }

    // debug(`${ name }Update()`, `pubsub`, [searchInstance])
    pubsub.publish(`${ name }Updated`, [searchInstance])
    return { result: [searchInstance], errors: [] }
  }
}
