import React, { Component } from 'react'

import createDebugger       from 'engine/debug'
const debug = createDebugger(require(`./package.json`).name)


import LoginForm            from '../LoginForm'
import LogoutForm           from '../LogoutForm'

class EnterContainer extends Component {
  constructor(props) {
    super(props)

    this.state = {
      loginErrors: [],
    }
  }

  onLogin = (payload) => {
    const { username, password } = payload
    this.props.sessionLogin({ username, password }).then(({ data }) => {
      const { sessionLogin } = data
      const { errors } = sessionLogin
      this.setState({ loginErrors: errors || [] })
    }).catch((err) => {
      debug(err)
    })
  }

  onLogout = (payload) => {
    this.props.sessionLogout().catch((err) => {
      debug(err)
    })
  }

  onSignup = (payload) => {
    this.props.sessionSignup(payload).then((result) => {
      debug(`onSignup()`, `RESULT`, result)
    }).catch(error => {
      debug(`onSignup()`, `ERROR`, error)
    })
  }

  render() {
    const { loginErrors } = this.state
    const { sessionCurrentUser } = this.props

    if (sessionCurrentUser) return <LogoutForm onSubmit={ this.onLogout } />

    return (
      <LoginForm
        errors={ loginErrors }

        onSubmit={ this.onLogin }
        onSignup={ this.onSignup }
      />
    )
  }
}

import { compose }          from 'redux'

import withSessionCurrentUser from '../../graphql/currentUser'
import withSessionLogin     from '../../graphql/login'
import withSessionLogout    from '../../graphql/logout'
import withSessionSignup    from '../../graphql/signup'

export default compose(
  withSessionCurrentUser(),
  withSessionLogin(),
  withSessionLogout(),
  withSessionSignup(),
)(EnterContainer)
