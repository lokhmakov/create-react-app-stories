import debug                from '../debug'

import model                from '../model'
import modelStoryLine       from '../../storyLine/model'

import subConfig            from '../../../config'
const { name } = subConfig

import errors               from '../errors'

export default async (parent, payload, ctx) => {
  debug(`createWithLines()`, payload)
  try {
    const { user } = ctx.req.context[name]
    if (!user) return { result: null, errors: [errors.ACCESS_DENIED] }

    const { storyLineList = [] } = payload
    delete payload['storyLineList']

    const instance = await model.create({ ...payload, authorId: user.id })
    const storyId = instance.id

    const instanceStoryLineList = []

    for (let storyLineDoc of storyLineList) {
      const instanceStoryLine = await modelStoryLine.create({ storyId, ...storyLineDoc })
      instanceStoryLine.dataValues && instanceStoryLineList.push(instanceStoryLine.dataValues)
    }

    instance.storyLineList = instanceStoryLineList

    return { result: instance, errors: [] }
  } catch (err) {
    debug(`createWithLines()`, `ERROR`, err)
    return { result: null, errors: [errors.UNKNOWN_ERROR] }
  }
}
