import { makeExecutableSchema } from 'graphql-tools'
import { merge }            from 'lodash'

import debug                from './debug'
import { mutationList, resolverList, subscriptionList, typeList, queryList } from './graphql'

let schema

export default function getSchema() {
  // console.log(`graphql.getSchema`, typeList.join('\n'))
  // console.log(`graphql.getSchema`, `type Query { ${ queryList.join('\n') } }`)
  // console.log(`graphql.getSchema`, `type Mutation { ${ mutationList.join('\n') } }`)
  // debug(`getSchema()`, subscriptionList)
  // debug(`getSchema()`, `type Subscription { ${ subscriptionList.join('\n') } }`)

  if (schema) return schema
  return schema = makeExecutableSchema({
    typeDefs: [
      ...typeList,
      `type Query { ${ queryList.join('\n') } }`,
      `type Mutation { ${ mutationList.join('\n') } }`,
      `type Subscription { ${ subscriptionList.join('\n') } }`,
    ],
    resolvers: merge(...resolverList)
  })
}
